
apply Service "ping4" {
  check_command = "ping4"

  //check is executed on the master node
  assign where host.address
}

apply Service "disk" {
  check_command = "disk"

  // Execute the check on the remote command endpoint
  command_endpoint = host.vars.agent_endpoint

  // Assign the service onto an agent
  assign where host.vars.agent_endpoint
}

apply Service "reboot_status_check" {
  import "generic-service"
  display_name = "Reboot Check"
  check_command = "powershell_check"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_reboot.ps1'"
  command_endpoint = host.address
  assign where host.vars.os == "windows"
}

apply Service "user_cert_check" {
  import "generic-service"
  display_name = "User Cert Check"
  check_command = "powershell_check"
  vars.ps_command = "& 'C:\\Program Files\\ICINGA2\\sbin\\check_user_cert.ps1'"
  command_endpoint = host.address
  assign where host.vars.os == "windows"
}

# ------- powershell checks

apply Service "ps-processor-time" {
  import "generic-service"
  check_command = "ps-perfmon"
  check_interval = 5s
  retry_interval = 5s

  command_endpoint = host.vars.agent_endpoint
  
  vars.perfmon_win_counter = "\\Processor(0)\\% Processor Time"
  assign where host.vars.os == "windows" && host.vars.agent_endpoint
}

apply Service "ps-disk-reads" {
  import "generic-service"
  check_command = "ps-perfmon"
  check_interval = 5s
  retry_interval = 5s

  command_endpoint = host.vars.agent_endpoint

  vars.perfmon_win_counter = "\\PhysicalDisk(_Total)\\Disk Reads/sec"

  assign where host.vars.os == "windows" && host.vars.agent_endpoint
}

# ------------- cmd checks

apply Service "cmd-processor-time" {
  import "generic-service"
  check_command = "cmd-perfmon"
  check_interval = 5s
  retry_interval = 5s

  command_endpoint = host.vars.agent_endpoint

  vars.perfmon_win_counter = "\\Processor(1)\\% Processor Time"

  assign where host.vars.os == "windows" && host.vars.agent_endpoint
}

apply Service "cmd-disk-reads" {
  import "generic-service"
  check_command = "cmd-perfmon"
  check_interval = 5s
  retry_interval = 5s

  command_endpoint = host.vars.agent_endpoint

  vars.perfmon_win_counter = "\\PhysicalDisk(_Total)\\Disk Reads/sec"

  assign where host.vars.os == "windows" && host.vars.agent_endpoint
}
